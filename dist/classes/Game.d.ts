import { Board, CastleRights, CastleRightsStr, Colors, EnPassant, FenStr, PieceType, Square, SquareIdx } from '../types/types';
import Gameboard from './Gameboard';
export default class Game extends Gameboard {
    castleRights: Record<Colors, CastleRights>;
    enPassant: SquareIdx | null;
    halfmoves: number;
    fullmoves: number;
    activeColor: Colors;
    private _checks;
    constructor({ castleRightsStr, board, enPassant, halfmoves, fullmoves, activeColor }: {
        castleRightsStr?: CastleRightsStr;
        enPassant?: EnPassant;
        halfmoves?: string | number;
        fullmoves?: string | number;
        activeColor?: Colors;
        board?: Board;
    });
    get checks(): (0 | 2 | 1 | 22 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 60 | 61 | 62 | 63)[];
    at(idx: SquareIdx, board?: ["bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null, "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null]): {
        moves: () => (0 | 2 | 1 | 22 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 60 | 61 | 62 | 63)[] | null;
        piece: "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp" | null;
        place: (piece: "bb" | "br" | "bn" | "bq" | "bk" | "bp" | "wb" | "wr" | "wn" | "wq" | "wk" | "wp") => void;
        remove: () => void;
        promote: (newType: "b" | "r" | "n" | "q") => void;
    };
    makeMove(from: Square, to: Square, promote?: Exclude<PieceType, 'k' | 'p'>): void;
    isGameOver(fenList: FenStr[]): {
        checkmate: boolean;
        unforcedDraw: boolean;
        forcedDraw: boolean;
    };
}
