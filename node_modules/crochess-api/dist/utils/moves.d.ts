import { Moves, Board, Square, Color } from '../types/types';
declare const moves: {
    vertAndLateral: (from: Square) => (to: Square) => boolean;
    diagonal: (from: Square) => (to: Square) => boolean;
    xByN: (num: number) => (from: Square) => (to: Square) => boolean;
    yByN: (num: number) => (from: Square) => (to: Square) => boolean;
};
export default moves;
declare function getLegalMoves(origin: Square, board: Board): Moves;
declare function getLegalMovesInCheck(origin: Square, board: Board, kingPos: Square, squareGivingCheck: Square): string[];
declare function getAllMovesForColor(color: Color, board: Board, skipKing?: boolean): Moves;
declare function getAttackingMovesForColor(color: Color, board: Board): Moves;
declare function getDiscoveredCheck(kingPos: Square, kingColor: Color, vacated: Square, board: Board): Square;
declare function canBlockOrCaptureCheck(kingPos: Square, squareGivingCheck: Square, board: Board): boolean;
export { getAttackingMovesForColor, getAllMovesForColor, getLegalMoves, getLegalMovesInCheck, getDiscoveredCheck, canBlockOrCaptureCheck };
